#BlueJ class context
comment0.target=Hall
comment0.text=\r\n\ The\ class\ represents\ a\ hall.\ It\ contains\ the\ method\ which\ sorts\r\n\ roommates\ into\ wings.\ \r\n\ \r\n\ @author\ Ria\ Bakshi\r\n\ @version\ 12/13/24\r\n
comment1.params=number\ gender
comment1.target=Hall(java.lang.String,\ java.lang.String)
comment1.text=\r\n\ @param\ number\ The\ hall's\ number.\ (ex.\ "01");\r\n\ @param\ gender\ The\ gender\ of\ the\ hall\ (F\ for\ AFAB;\ M\ for\ AMAB;\ A\ for\ all\ gender)\r\n
comment10.params=roomies
comment10.target=boolean\ checkEligibility(Roommates)
comment10.text=\r\n\ Check\ if\ a\ roommate\ pair\ is\ eligible\ to\ enter\ this\ hall.\ \r\n\ A\ roommate\ pair\ is\ eligible\ if\ their\ gender\ matches\ the\ gender\ of\ the\ hall.\ \r\n\ (Any\ gender\ is\ allowed\ into\ all\ gender\ halls).\r\n\ They\ must\ also\ be\ less\ than\ or\ equal\ to\ the\ sixteenth\ (TODO\ change\ if\ extra\ implementation)\r\n\ roommate\ pair\ in\ their\ grade\ in\ this\ hall.\ \r\n\ \r\n\ @param\ roomies\ The\ roommate\ pair\ to\ check\ for.\ \r\n\ @return\ True\ if\ the\ roommate\ pair\ is\ eligible\ to\ enter\ the\ hall.\r\n
comment2.params=
comment2.target=java.lang.String\ getHallNumber()
comment2.text=\r\n\ Get\ the\ hall\ number.\ \r\n\ @return\ the\ hall\ number\r\n
comment3.params=type
comment3.target=Wing\ getWing(java.lang.String)
comment3.text=\r\n\ Get\ the\ desired\ wing\ for\ hall\r\n\ @param\ type\ The\ character\ for\ the\ desired\ wing\ (A,\ B,\ C,\ D)\r\n\ @return\ An\ object\ reference\ to\ the\ desired\ wing.\ \r\n\ Returns\ null\ if\ not\ a\ valid\ character\r\n
comment4.params=
comment4.target=Wing[]\ getWings()
comment5.params=
comment5.target=void\ setHallForRoommates()
comment6.params=
comment6.target=void\ sortIntoWings()
comment6.text=\r\n\ Sort\ students\ into\ wings.\r\n\ TODO\:\ is\ this\ fair?\ to\ first\ sort\ \r\n\ those\ with\ a\ room\ preference\ into\ wings?\ \r\n\ \r\n\ Methodology\:\ \r\n\ 1.\ Sort\ those\ who\ with\ a\ room\ preference\ first.\ \r\n\ 2.\ Then\ sort\ those\ whose\ first\ choice\ hall\ preference\ it\ is\ get\ priority\ into\ wings\r\n\ 3.\ Rest\ get\ sorted\ into\ wings\ based\ on\ availability\r\n
comment7.params=
comment7.target=void\ sortRoomPreferences()
comment7.text=\r\n\ Sort\ all\ students\ that\ have\ a\ room\ preference.\ \r\n
comment8.params=roomies\ priority
comment8.target=void\ sortRoomate(Roommates,\ boolean)
comment8.text=\r\n\ Sort\ a\ singular\ roommate\ pair.\ \r\n\ Methodology\:\r\n\ This\ first\ tries\ to\ evenly\ distribute\ classes\ into\ wings\ (senior,\ junior,\ soph).\ \r\n\ However,\ if\ this\ is\ not\ possible,\ then\ they\ are\ sorted\ into\ the\ next\ available\ wing.\ \r\n\ \r\n\ @param\ roomies\ The\ pair\ of\ roommates\ to\ sort.\ \r\n\ @param\ prority\ Whether\ or\ not\ this\ roommate\ is\ of\ priority.\r\n
comment9.params=gender
comment9.target=Wing\ getNextAvailableWing(java.lang.String)
comment9.text=\r\n\ Get\ the\ next\ available\ wing\ for\ this\ hall.\ \r\n\ \r\n\ @param\ The\ gender\ to\ check\ for.\r\n\ @return\ The\ next\ available\ wing.\r\n
numComments=11
