#BlueJ class context
comment0.target=Wing
comment0.text=\r\n\ This\ class\ represents\ a\ wing.\r\n\r\n\ @author\ Ria\ Bakshi\r\n\ @version\ 12/13/24\r\n
comment1.params=gender\ letter
comment1.target=Wing(java.lang.String,\ java.lang.String)
comment1.text=\r\n\ @param\ gender\ The\ gender\ of\ the\ this\ wing.\ \r\n\ @param\ letter\ The\ letter\ assigned\ to\ this\ wing\ ("A",\ "B",\ "C",\ or\ "D")\r\n
comment10.params=
comment10.target=int\ getLRoom()
comment10.text=\r\n\ Get\ the\ next\ available\ l-room\ in\ this\ wing.\ \r\n\ @return\ the\ room\ number\ of\ the\ next\ available\ L-Room\ (Note\:\ NOT\ index),\ -1\ if\ there\ are\ none\ available\r\n
comment11.params=
comment11.target=int\ getHypoallergenic()
comment11.text=\r\n\ Get\ the\ next\ available\ hypoallergenic\ room\ in\ this\ wing.\ \r\n\ @return\ the\ room\ number\ of\ the\ next\ available\ hypoallergenic\ room(Note\:\ NOT\ index),\ -1\ if\ there\ are\ none\ available\r\n
comment12.params=
comment12.target=int[]\ getQuad()
comment12.text=\r\n\ Get\ the\ next\ available\ l-room\ in\ this\ wing.\ \r\n\ @return\ the\ room\ numbers\ of\ the\ available\ quad,\ null\ if\ there\ are\ none\ available\r\n
comment13.params=roomsToCheck
comment13.target=int\ getSpecialRooms(int[])
comment13.text=\r\n\ The\ code\ that\ checks\ for\ availability\ in\ each\ of\ the\ given\ room\ numbers\ in\ this\ wing.\r\n\ @param\ roomsToCheck\ An\ array\ of\ the\ potential\ room\ numbers\ to\ check\ if\ they\ are\ available.\ \r\n\ @return\ the\ room\ number\ of\ the\ first\ available\ room\ number\ given\ in\ the\ array\ (Note\:\ NOT\ index),\ -1\ if\ there\ are\ none\ available\r\n
comment2.params=
comment2.target=java.lang.String\ getLetter()
comment2.text=\r\n\ Get\ the\ letter\ associated\ with\ this\ wing.\r\n\ @return\ the\ letter\ of\ this\ wing.\r\n
comment3.params=
comment3.target=void\ setWingForAllRoommates()
comment3.text=\ \r\n\ Set\ the\ wing\ for\ all\ the\ roommates\ in\ this\ wing\ to\ \r\n\ this\ wing.\ \r\n
comment4.params=
comment4.target=void\ sortIntoRooms()
comment4.text=\r\n\ Sort\ those\ in\ this\ wing\ into\ a\ room.\ \r\n\ In\ the\ future,\ this\ method\ could\ be\ implemented\ to\ account\ for\ room\ preference\ info\ \r\n\ (ex.\ quads,\ LRooms,\ etc.)\ \r\n
comment5.params=
comment5.target=void\ sortRoomPreferences()
comment5.text=\r\n\ Sort\ all\ students\ that\ have\ a\ room\ preference.\ \r\n
comment6.params=roomies\ index
comment6.target=boolean\ addRoommateToRoom(Roommates,\ int)
comment6.text=\r\n\ Add\ a\ roommate\ pair\ to\ a\ specific\ room.\r\n\ @param\ roomies\ The\ roommates\ to\ add.\r\n\ @param\ index\ The\ index\ of\ the\ room\ to\ add\ the\ roommate\ to.\ \r\n\ @return\ true\ if\ pair\ was\ successfully\ added\ to\ the\ desired\ room.\r\n
comment7.params=
comment7.target=java.util.ArrayList\ getPairsWithRoomPreference()
comment7.text=\r\n\ Get\ all\ the\ roommate\ pairs\ with\ a\ room\ preference.\ \r\n\ @return\ An\ arraylist\ with\ all\ the\ rooommate\ pairs\ who\ have\ a\ room\ preference.\ \r\n
comment8.params=roomies
comment8.target=boolean\ checkEligibility(Roommates)
comment8.text=\r\n\ Check\ the\ eligibility\ of\ a\ roommate\ pair\ into\ this\ wing.\r\n\ A\ roommate\ pair\ is\ eligible\ if\ their\ gender\ (AFAB\ or\ AMAB)\ matches\r\n\ the\ gender\ of\ this\ wing\ and\ if\ they\ are\ less\ than\ or\ equal\ to\ the\ fourth\ (TODO\ change\ if\ extra\ implementation)\r\n\ roommate\ pair\ in\ their\ grade\ in\ this\ wing.\ \r\n\ \r\n\ @param\ roomies\ The\ roomate\ pair\ to\ check.\r\n\ @return\ True\ if\ the\ roommate\ pair\ is\ eligible.\r\n
comment9.params=
comment9.target=boolean\ isSpace()
comment9.text=\r\n\ Check\ if\ there\ is\ any\ available\ space\ in\ this\ wing.\ \r\n\ @return\ true\ if\ there\ is.\r\n
numComments=14
